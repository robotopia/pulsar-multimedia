set terminal pngcairo enhanced size 960,900 background rgb "black"

unset border
unset key
unset tics

set style line 1 lw 1 lc rgb "white"

p1 = 82;  p2 = 230
npulses = p2 - p1 + 1
framerate = 24
nframes = 17 * framerate # i.e. 11 seconds

# Animation plan:
# |        A          | B  |        C          | D  |        E          |        F         |
# |------- 5s --------|-1s-|------- 5s --------|-1s-|------- 5s --------|------- 5s -------|
# |   pulses rise     | -- | pulses move left  | -- | convert to image  |     zoom in      |

firstframeA = 0;               lastframeA = firstframeA + 5*framerate - 1
firstframeB = lastframeA + 1;  lastframeB = firstframeB + 1*framerate - 1
firstframeC = lastframeB + 1;  lastframeC = firstframeC + 5*framerate - 1
firstframeD = lastframeC + 1;  lastframeD = firstframeD + 1*framerate - 1
firstframeE = lastframeD + 1;  lastframeE = firstframeE + 5*framerate - 1
firstframeF = lastframeE + 1;  lastframeF = firstframeF + 5*framerate - 1

# Animation-related functions
# ("clock" goes from 0 to 1 for EACH section)
sm(clock) = 3*clock**2 - 2*clock**3                     # Smooth the animation
smrange(clock, valstart, valstop) = valstart + (valstop - valstart)*sm(clock)

ht(clock, pulseno) = (pulseno-p1)*sm(clock) + 1         # Adjust height in first part of animation

lf_start_clock(pulseno) = (0.8 * (pulseno-p1)) / npulses     # i.e. the last pulse starts moving 4 out of 5 seconds in
lf_stop_clock(pulseno)  = lf_start_clock(pulseno) + 0.2 # i.e. each pulse takes 0.2 to get from its starting position
                                                        # to its final position
lf_start_pos(pulseno) = 1024 * (pulseno-p1)
lf_stop_pos(pulseno)  = 0
lf(clock, pulseno)    = (clock < lf_start_clock(pulseno) ? lf_start_pos(pulseno) : \
                        (clock > lf_stop_clock(pulseno)  ? lf_stop_pos(pulseno)  : \
                        smrange((clock-lf_start_clock(pulseno))/(lf_stop_clock(pulseno) - lf_start_clock(pulseno)), \
                                lf_start_pos(pulseno), \
                                lf_stop_pos(pulseno) )))

# Color map function
mn = 0.0
mx = 2.0
heatr(x) = (x-mn)/(mx-mn) < 1.0/3.0 ? 255*(x-mn)/((mx-mn)/3.0) : 255
heatg(x) = (x-mn)/(mx-mn) < 1.0/3.0 ? 0 : ((x-mn)/(mx-mn) < 2.0/3.0 ? 255*(x-(mx-mn)/3.0-mn)/((mx-mn)/3.0) : 255)
heatb(x) = (x-mn)/(mx-mn) < 2.0/3.0 ? 0 : 255*(x-2*(mx-mn)/3.0-mn)/((mx-mn)/3.0)

# Zooming, etc
xlo_start = 0;       xlo_stop = 380
xhi_start = 5*1024;  xhi_stop = 770
ylo_start = 0;       ylo_stop = 0
yhi_start = 30;      yhi_stop = npulses+1

set xrange [xlo_start:xhi_start]
set yrange [ylo_start:yhi_start]

## Section A:
#do for [frame=firstframeA:lastframeA] {
#
#    t = (1.0*frame)/framerate
#
#    outfile = sprintf("stackpulse_%04d.png", frame)
#    set out outfile
#    print "Plotting frame ".frame
#
#    clock = t / 5.0
#    plot "data_short.txt" u (lf(0, $1) + $3):(ht(clock, $1) + $4) w l ls 1 notitle
#
#}

## Section B
#do for [frame=firstframeB:lastframeB] {
#
#    outfile = sprintf("stackpulse_%04d.png", frame)
#    set out outfile
#    print "Plotting frame ".frame
#
#    plot "data_short.txt" u (lf(0, $1) + $3):(ht(1, $1) + $4) w l ls 1 notitle
#
#}

## Section C
#do for [frame=firstframeC:lastframeC] {
#
#    t = (1.0*frame)/framerate
#
#    outfile = sprintf("stackpulse_%04d.png", frame)
#    set out outfile
#    print "Plotting frame ".frame
#
#    clock = (t - 6.0) / 5.0
#    plot "data_short.txt" u (lf(clock, $1) + $3):(ht(1, $1) + $4) w l ls 1 notitle
#
#}

# Section D
do for [frame=firstframeD:lastframeD] {

    t = (1.0*frame)/framerate

    outfile = sprintf("stackpulse_%04d.png", frame)
    set out outfile
    print "Plotting frame ".frame

    plot "data_short.txt" u (lf(1, $1) + $3):(ht(1, $1) + $4) w l ls 1 notitle

}

# Section E
do for [frame=firstframeE:lastframeE] {

    t = (1.0*frame)/framerate

    outfile = sprintf("stackpulse_%04d.png", frame)
    set out outfile
    print "Plotting frame ".frame

    clock = (t - 12.0) / 5.0
    plot "data_short.txt" u (lf(1, $1) + $3):(ht(1, $1) + $4) \
                                 with l lw 1 lc rgb "#".sprintf("%x", smrange(clock,0,255))."ffffff" notitle, \
         "pulsestack.dat" matrix using ($1+1):($2+1):(heatr($3)):(heatg($3)):(heatb($3)):(smrange(clock,0,255)) \
                                 with rgbalpha notitle

}

## Section F
do for [frame=firstframeF:lastframeF] {

    t = (1.0*frame)/framerate

    outfile = sprintf("stackpulse_%04d.png", frame)
    set out outfile
    print "Plotting frame ".frame

    clock = (t - 17.0) / 5.0
    set xrange [smrange(clock, xlo_start, xlo_stop):smrange(clock, xhi_start, xhi_stop)]
    set yrange [smrange(clock, ylo_start, ylo_stop):smrange(clock, yhi_start, yhi_stop)]
    plot "pulsestack.dat" matrix using ($1+1):($2+1):(heatr($3)):(heatg($3)):(heatb($3)) \
                                 with rgbimage notitle

}
